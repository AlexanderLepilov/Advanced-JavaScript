// Задание 1
// • Используя Symbol.iterator, создайте объект "Музыкальная коллекция", который можно итерировать. Каждая итерация должна возвращать следующий альбом из коллекции.

// • Создайте объект musicCollection, который содержит массив альбомов и имеет свойство-символ Symbol.iterator. Каждый альбом имеет следующую структуру:

// {
// title: "Название альбома",
// artist: "Исполнитель",
// year: "Год выпуска"
// }

// • Реализуйте кастомный итератор для объекта musicCollection. Итератор должен перебирать альбомы по порядку.
// • Используйте цикл for...of для перебора альбомов в музыкальной коллекции и вывода их на консоль в формате: Название альбома - Исполнитель (Год выпуска)

const MusicCollection = function() {
    this.albums = [];
};

MusicCollection.prototype[Symbol.iterator] = function() {
    let index = 0;
    return {
        next: () => {
            if (index < this.albums.length) {
                const album = this.albums[index];
                index++;
                return {
                    value: album,
                    done: false
                };
            } else {
                return {
                    done: true
                };
            }
        }
    };
};

const musicCollection = new MusicCollection();

musicCollection.albums.push({
    title: "Альбом 1",
    artist: "Исполнитель 1",
    year: "2020"
});

musicCollection.albums.push({
    title: "Альбом 2",
    artist: "Исполнитель 2",
    year: "2022"
});

musicCollection.albums.push({
    title: "Альбом 3",
    artist: "Исполнитель 3",
    year: "2024"
});

for (const album of musicCollection) {
    console.log(`${album.title} - ${album.artist} (${album.year})`);
}

// Задание 2
// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.

// Необходимо создать систему управления этими заказами, которая позволит:

// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.

// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

// Повара и их специализации:

// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:

// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:

// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.

// const chefs = new Map([
//     ['Виктор', 'Пицца'],
//     ['Ольга', 'Суши'],
//     ['Дмитрий', 'Десерты']
// ]);

// const dishes = new Map([
//     ['Пицца "Маргарита"', 'Виктор'],
//     ['Пицца "Пепперони"', 'Виктор'],
//     ['Суши "Филадельфия"', 'Ольга'],
//     ['Суши "Калифорния"', 'Ольга'],
//     ['Тирамису', 'Дмитрий'],
//     ['Чизкейк', 'Дмитрий']
// ]);

// const orders = new Map([
//     [{клиент: 'Алексей'}, ['Пицца "Пепперони"', 'Тирамису']],
//     [{клиент: 'Мария'}, ['Суши "Калифорния"', 'Пицца "Маргарита"']],
//     [{клиент: 'Ирина'}, ['Чизкейк']]
// ]);

// orders.forEach((dishList, client) => {
//     console.log(`Заказ клиента ${client.клиент}:`);
//     dishList.forEach((dish) => {
//         const chef = chefs.get(dishes.get(dish));
//         console.log(`- ${dish}, готовит: ${chef}`);
//     });
//     console.log('---');
// });

const chefs = new Map([
    ['Виктор', 'Пицца'],
    ['Ольга', 'Суши'],
    ['Дмитрий', 'Десерты']
  ]);

const dishes = new Map([
    ['Пицца "Маргарита"', 'Виктор'],
    ['Пицца "Пепперони"', 'Виктор'],
    ['Суши "Филадельфия"', 'Ольга'],
    ['Суши "Калифорния"', 'Ольга'],
    ['Тирамису', 'Дмитрий'],
    ['Чизкейк', 'Дмитрий']
  ]);

const orders = new Map([
    [{ клиент: 'Алексей' }, ['Пицца "Пепперони"', 'Тирамису']],
    [{ клиент: 'Мария' }, ['Суши "Калифорния"', 'Пицца "Маргарита"']],
    [{ клиент: 'Ирина' }, ['Чизкейк']]
  ]);

orders.forEach((dishList, client) => {
    console.log(`Заказ клиента ${client.клиент}:`);
    dishList.forEach((dish) => {
      const chef = dishes.get(dish);
      const chefSpecialty = chefs.get(dishes.get(dish));
      console.log(`- ${dish} (Повар: ${chef}, Специализация: ${chefSpecialty})`);
    });
    console.log('---');
  });